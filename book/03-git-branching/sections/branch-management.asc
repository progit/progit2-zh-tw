[[_branch_management]]
=== 分支管理

(((branches, managing)))
到目前為止，你已經建立過、合併過和刪除過分支（branch）；讓我們再來看一些分支管理工具，隨著你不斷地使用分支功能，它們會讓你工作得更順手。

`git branch` 命令不僅能建立和刪除分支，(((git commands, branch)))
如果不加任何參數，你會得到一份簡單的列表列出目前所有分支：

[source,console]
----
$ git branch
  iss53
* master
  testing
----

注意 `master` 分支前面有一個 `*` 字元，它表示目前所檢出（checkout）的分支（換句話說，`HEAD` 指向這個分支）；
這意謂著如果你現在提交，`master` 分支將隨著向前移動。
若要查看各個分支最後一個提交資訊，執行 `git branch -v`：

[source,console]
----
$ git branch -v
  iss53   93b412c fix javascript issue
* master  7a98805 Merge branch 'iss53'
  testing 782fd34 add scott to the author list in the readmes
----

要從該清單中篩選出「已經」或「尚未」與目前分支合併的分支，分別可以用 `--merged` 和 `--no-merged` 選項。
使用 `git branch --merged` 來查看哪些分支已被合併到目前分支：

[source,console]
----
$ git branch --merged
  iss53
* master
----

由於之前的 `iss53` 已經被合併了，所以會在列表中看到它；
列表中沒有被標記 `*` 的分支通常都可以用 `git branch -d` 刪除；你已經把它們的工作內容整併到其他分支，所以刪掉它們也不會有所損失。

使用 `git branch --no-merged` 來查看哪些分支的工作尚未被合併：

[source,console]
----
$ git branch --no-merged
  testing
----

這顯示了你其它的分支；
由於它包含了尚未被合併進來的工作內容，用 `git branch -d` 刪除該分支將會失敗：

[source,console]
----
$ git branch -d testing
error: The branch 'testing' is not fully merged.
If you are sure you want to delete it, run 'git branch -D testing'.
----

如果你確實想要刪除該分支並丟掉那個工作成果，可以用 `-D` 選項（譯註：大寫的 D）來強制執行，就像上面訊息中所提示的。
